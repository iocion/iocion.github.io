{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"AI/AI%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/","text":"# \u90e8\u7f72deepseek-r1\u6a21\u578b # Pull latest image # https://hub.docker.com/r/lmsysorg/sglang/tags docker pull lmsysorg/sglang:latest # Launch docker run --gpus all --shm-size 32g -p 30000:30000 -v ~/.cache/huggingface:/root/.cache/huggingface --ipc=host --network=host --privileged lmsysorg/sglang:latest \\ python3 -m sglang.launch_server --model deepseek-ai/DeepSeek-V3 --tp 8 --trust-remote-code --port 30000","title":"AI\u6df1\u5ea6\u5b66\u4e60"},{"location":"Algorithm/algoritm_path/","text":"algorithm 1.\u57fa\u672c\u8def\u7ebf \u57fa\u672c\u6570\u636e\u7ed3\u6784 1.\u4e8c\u53c9\u6811 //\u66f4\u65b0\uff0c\u5e73\u8861\u4f7f\u7528 2.\u7ea2\u9ed1\u6811 3.\u94fe\u8868 4.\u53cc\u94fe\u8868 5.\u6570\u7ec4 6.hash\u8868 7.B+\u6811 //\u5404\u79cd\u6811\uff0c\u7528\u4e8e\u5143\u7d20\u589e\u5220\u6539\u67e5 //\u51fd\u6570\u8c03\u7528\uff0c\u5b50\u8bed\u53e5\uff0c\u904d\u5386 //\u8bfb\u78c1\u76d8\uff0c\u786c\u76d8\u8bfb\u53d6\u901f\u5ea6\u8f83\u6162 \u56fe\u76f8\u5173 //\u57fa\u672c\u7b97\u6cd5 \u6bd4\u8f83 hash\u8868\u4ee5\u53ca\u6811 \u66f4\u52a0\u590d\u6742 //\u7236\u8282\u70b9\u548c\u5b50\u8282\u70b9\u7684\u4e2a\u6570 //\u7528\u6765\u8868\u73b0\u6709\u5411\u548c\u65e0\u5411 \u5bb9\u5668\uff1a c\u8bed\u8a00 \u6ca1\u6709\u6807\u51c6\u5bb9\u5668\uff0c\u9700\u8981\u81ea\u5df1\u5b9e\u73b0 cpp std::list std::vector std::map 2.Data \u9009\u5bb9\u5668\uff0c\u53bb\u7ba1\u7406\u6570\u636e Nginx,url location http post\u8bf7\u6c42 get\u8bf7\u6c42 hash\u8868\u67e5\u627e\uff0c\u627e\u5230\u5408\u9002\u7684localtion 3.Review algorithm \u8003\u8bd5\u4e2d\u6709\u516d\u9053\u7efc\u5408\u5927\u9898\uff0c\u5927\u9898\u4e2d\u6709\u7a0b\u5e8f\u586b\u7a7a\uff0c\u7b97\u6cd5\u601d\u8def\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff0c\u4ee5\u53ca\u753b\u56fe","title":"algorithm"},{"location":"Algorithm/algoritm_path/#algorithm","text":"","title":"algorithm"},{"location":"Algorithm/algoritm_path/#1","text":"\u57fa\u672c\u6570\u636e\u7ed3\u6784 1.\u4e8c\u53c9\u6811 //\u66f4\u65b0\uff0c\u5e73\u8861\u4f7f\u7528 2.\u7ea2\u9ed1\u6811 3.\u94fe\u8868 4.\u53cc\u94fe\u8868 5.\u6570\u7ec4 6.hash\u8868 7.B+\u6811 //\u5404\u79cd\u6811\uff0c\u7528\u4e8e\u5143\u7d20\u589e\u5220\u6539\u67e5 //\u51fd\u6570\u8c03\u7528\uff0c\u5b50\u8bed\u53e5\uff0c\u904d\u5386 //\u8bfb\u78c1\u76d8\uff0c\u786c\u76d8\u8bfb\u53d6\u901f\u5ea6\u8f83\u6162 \u56fe\u76f8\u5173 //\u57fa\u672c\u7b97\u6cd5 \u6bd4\u8f83 hash\u8868\u4ee5\u53ca\u6811 \u66f4\u52a0\u590d\u6742 //\u7236\u8282\u70b9\u548c\u5b50\u8282\u70b9\u7684\u4e2a\u6570 //\u7528\u6765\u8868\u73b0\u6709\u5411\u548c\u65e0\u5411 \u5bb9\u5668\uff1a c\u8bed\u8a00 \u6ca1\u6709\u6807\u51c6\u5bb9\u5668\uff0c\u9700\u8981\u81ea\u5df1\u5b9e\u73b0 cpp std::list std::vector std::map","title":"1.\u57fa\u672c\u8def\u7ebf"},{"location":"Algorithm/algoritm_path/#2data","text":"\u9009\u5bb9\u5668\uff0c\u53bb\u7ba1\u7406\u6570\u636e Nginx,url location http post\u8bf7\u6c42 get\u8bf7\u6c42 hash\u8868\u67e5\u627e\uff0c\u627e\u5230\u5408\u9002\u7684localtion","title":"2.Data"},{"location":"Algorithm/algoritm_path/#3review-algorithm","text":"\u8003\u8bd5\u4e2d\u6709\u516d\u9053\u7efc\u5408\u5927\u9898\uff0c\u5927\u9898\u4e2d\u6709\u7a0b\u5e8f\u586b\u7a7a\uff0c\u7b97\u6cd5\u601d\u8def\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff0c\u4ee5\u53ca\u753b\u56fe","title":"3.Review algorithm"},{"location":"Algorithm/%E7%AE%97%E6%B3%95%E8%AF%BE%E8%AE%BE/","text":"\u6700\u4f18\u96f7\u8fbe\u95ee\u9898(\u8d2a\u5fc3\u7b97\u6cd5) 1.\u7b97\u6cd5\u601d\u8def\u5206\u6790\uff1a \u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u6837\u4f8b\u8f93\u5165\u8f93\u51fa\uff0c\u4ee5\u53ca\u89e3\u9898\u601d\u8def\u7684\u5206\u6790\u6b65\u9aa4\u5982\u4e0b\uff1a \u200b \u9996\u5148\u5efa\u7acb\u57fa\u672c\u6570\u5b66\u6a21\u578b\uff0c\u7531\u4e8e\u9898\u76ee\u63d0\u793a\u8981\u91c7\u7528\u8d2a\u5fc3\u7b97\u6cd5\u7684\u7b56\u7565\uff0c\u6240\u4ee5\u5728\u8003\u8651\u6700\u4f18\u89e3\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u6240\u6709\u96f7\u8fbe\u7684\u8bbe\u7f6e\u70b9\u4f4d\u90fd\u5e94\u8be5\u5efa\u7acb\u5728 x\u8f74\u7ebf \u4e0a\u9762\uff0c\u901a\u8fc7\u961f\u957f\u7684\u601d\u8def\u7684\u63d0\u793a\uff0c\u5bf9\u53f3\u7aef\u70b9\u8fdb\u884c\u5347\u5e8f\u6392\u5217\uff0c\u80fd\u6210\u529f\u8986\u76d6\u7684\u5c9b\u5c7f\u90e8\u5206\u76f4\u63a5\u5ffd\u7565\uff0c\u91c7\u7528\u8d2a\u5fc3\u7684\u601d\u8def\uff0c\u8fdb\u884c\u53d6\u820d\uff0c\u53d6\u6700\u4f18\u89e3\u7684\u60c5\u51b5\uff0c\u4e8e\u662f x\u8f74\u7ebf\u4e0a\u6c42\u53d6\u5173\u952e\u70b9 \u6210\u4e3a\u8fd9\u9053\u9898\u6211\u4eec\u7ec4\u7684\u5173\u952e\u89e3\u9898\u601d\u8def\u3002 \u200b \u7136\u540e\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e3b\u8981\u88ab\u6211\u4eec\u5206\u4e3a\u4e09\u4e2a\u4e3b\u8981\u7684\u7b97\u6cd5\u5206\u652f\u90e8\u5206\uff0c\u7b2c\u4e00\u6b65\uff0c\u51fa\u73b0y\u5750\u6807\u5927\u4e8ed\u957f\u5ea6\u7684\u70b9\u5c31\u76f4\u63a5\u8fdb\u884c \u53d6\u820d \uff0c\u5e76\u901a\u8fc7flag\u7684\u503c\u6765\u8fdb\u884c\u8f93\u5165\u7ed3\u675f\u540eprintf(\"-1\")\u7684\u5173\u952e\u5224\u65ad\u3002\u7b2c\u4e8c\u6b65\uff0c\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e0d\u6ee1\u8db3\u7b2c\u4e00\u6b65\u7684\u6761\u4ef6\uff0c\u8fd9\u662f\u5bf9\u95ee\u9898\u8fdb\u884c\u518d\u4e00\u6b21\u7684\u5206\u89e3\uff0c\u9996\u5148\u5229\u7528\u4e0b\u9762\u7684\u516c\u5f0f\u6c42\u51fa\u5728x\u8f74\u548cy\u8f74\u7684\u5750\u6807. a[i].l=x[i]-sqrt(d*d-y[i]*y[i]); //\u6c42\u51fa\u5de6\u7aef\u70b9 a[i].r=x[i]+sqrt(d*d-y[i]*y[i]); //\u6c42\u51fa\u53f3\u7aef\u70b9 \u200b \u4e4b\u540e\u5bf9\u53f3\u7aef\u70b9\u8fdb\u884c\u6392\u5e8f\uff0c\u6392\u5e8f\u540e\uff0c\u8fdb\u5165\u5224\u65ad\u90e8\u5206\uff0c\u5206\u4e3a\u4e00\u4e0b\u4e09\u79cd\u60c5\u51b5 1.\u5728i==1\u7684\u65f6\u5019\uff0c\u628a\u53f3\u7aef\u70b9\u7684\u90e8\u5206\u7684\u503c\u7528temp\u53d8\u91cf\u5b58\u8d77\u6765\uff0c\u7136\u540e\u628a\u7b2c\u4e00\u4e2a\u96f7\u8fbe\u7684\u4f4d\u7f6e\u5b9a\u4f4d\u5230\u6700\u53f3\u4fa7\uff0cans++\u3002 2.\u5728\u5224\u65ad\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u7aef\u70b9\u90e8\u5206\u662f\u5426\u5c0f\u4e8e\u4e0a\u4e00\u4e2a\u8282\u70b9\u7684\u53f3\u7aef\u70b9\u90e8\u5206\uff0c\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219\u76f4\u63a5\u68c0\u67e5\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002 3.\u5426\u5219\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u60c5\u51b5\u7684\u65f6\u5019\uff0c\u8fd9\u662f\u4e00\u4e2a\u8282\u70b9\u663e\u7136\u4e0d\u591f\u5305\u62ec\u6240\u6709\u5c9b\u5c7f\uff0c\u4e8e\u662f\u91cd\u65b0\u5728\u6b64\u8282\u70b9\u4e0a\u5bf9\u540e\u9762\u7684temp\u8fdb\u884c\u66f4\u65b0\u3002 \u6267\u884c\u5b8c\u4e4b\u540e\u518d\u6b21\u8fdb\u5165\u5faa\u73af\u5224\u65ad\u95ee\u9898 \u6ce8\u610f\uff1a \u4e0a\u8ff0\u60c5\u51b5\u90fd\u662f\u5efa\u7acb\u5728\u5728\u6ee1\u8db3\u6392\u5e8f\u6761\u4ef6\u4e4b\u540e\u7684\u3002 2.\u6570\u636e\u7ed3\u6784\u7684\u9009\u62e9\u548c\u8bbe\u8ba1\uff1a \u200b \u7531\u7b2c\u4e00\u90e8\u5206\u7684\u5206\u6790\uff0c\u6211\u4eec\u9996\u5148\u4f7f\u7528MAXN\u5206\u914d\u4e00\u4e2a\u8f83\u5927\u7684\u6570\uff0c\u7ed9\u4e00\u4e2a\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u9632\u6b62\u6ea2\u51fa\u3002\u7136\u540e\u91c7\u7528\u4e00\u7ef4\u6570\u7ec4\u8fdb\u884c\u5b58\u50a8\u6570\u636e\u5185\u5bb9\u3002 \u7136\u540e\u95ee\u9898\u7684\u5173\u952e\u90e8\u5206\u5c31\u662f\u5bf9\u4e8e\u5de6\u53f3\u7aef\u70b9\u7684\u5b58\u50a8\u95ee\u9898\uff0c\u6211\u4eec\u7ecf\u8fc7\u5c0f\u7ec4\u7684\u8ba8\u8bba\u4f7f\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u8fdb\u884c\u5b58\u50a8\uff0c\u4fbf\u5229\u540e\u9762\u7684\u6392\u5e8f\u548c\u904d\u5386 1. x[MAXN] y[MAXN] //\u7528\u6765\u5b58\u50a8\u67d0\u4e00\u7ed3\u70b9\u7684x\uff0cy\u5750\u6807 2. struct node{ double l,r; //\u5b9a\u4e49\u7ed3\u6784\u4f53\u5b58\u50a8\u5de6\u53f3\u7aef\u70b9 }a[MAXN]; 3.\u7b97\u6cd5\u8bbe\u8ba1\u4ee3\u7801 #include <iostream> #include <algorithm> #include <cstdio> #include <math.h> #define MAXN 10001 using namespace std; int n,ans=0;//ans\u7528\u6765\u5b58\u50a8\u7ed3\u679c double d,temp,x[MAXN],y[MAXN]; struct node{ double l,r; //\u5b9a\u4e49\u7ed3\u6784\u4f53\u5b58\u50a8\u505a\u53f3\u7aef\u70b9 }a[MAXN]; double cmp(node aa,node bb){ return aa.r<bb.r; //\u6309\u53f3\u7aef\u70b9\u8fdb\u884c\u5347\u5e8f\u6392\u5217 } int main() { int flag = 1; do{ cin>>n>>d; for(int i=1;i<=n;i++){ { cin>>x[i]>>y[i]; if(y[i]>d){ flag=0; //\u4f7f\u7528flag\u6765\u8fdb\u884c\u6807\u5fd7\u662f\u5426\u65e0\u6cd5\u8986\u76d6\u5c9b\u5c7f } a[i].l=x[i]-sqrt(d*d-y[i]*y[i]); //\u6c42\u51fa\u5de6\u7aef\u70b9 a[i].r=x[i]+sqrt(d*d-y[i]*y[i]); //\u6c42\u51fa\u53f3\u7aef\u70b9 } } sort(a+1,a+n+1,cmp); //\u5bf9a1\u5230an\u8fdb\u884c\u6392\u5e8f //\u7531\u4e8e\u5df2\u7ecf\u7ecf\u8fc7\u5347\u5e8f\u6392\u5217\uff0c\u8fd9\u65f6\u53ea\u9700\u8981\u6700\u5c0f\u53f3\u7aef\u70b9\u90e8\u5206\u8fdb\u884c\u5faa\u73af\u68c0\u6d4b\uff0c\u8fdb\u884c\u6dfb\u52a0\u8282\u70b9\u5373\u53ef for(int i = 1;i<=n;i++){ if(!flag){ printf(\"-1\\n\"); //\u65e0\u6cd5\u8986\u76d6\u8f93\u51fa-1 return 0; } else if(i==1){ temp=a[i].r; //\u628a\u7b2c\u4e00\u4e2a\u96f7\u8fbe\u5b9a\u4f4d\u5230\u6700\u53f3\u4fa7 ans++; } else if(temp>a[i].l) //\u5982\u679c\u8986\u76d6\uff0c\u5219\u8fd4\u56de\u5faa\u73af\u5f00\u59cb\u90e8\u5206 continue; else{ temp=a[i].r; // \u5426\u5219\u9632\u6b62\u4e00\u4e2a\u65b0\u7684\u96f7\u8fbe ans++; } } if(n!=0&&d!=0){ cout<<ans<<endl; //\u5f53n\u548cd\u90fd\u4e0d\u7b49\u4e8e\u96f6\u7684\u65f6\u5019\u8f93\u51fa\uff0c\u907f\u514d\u6700\u540e\u4e00\u6b210\uff0c0\u8f93\u51faans } ans=0; //\u6267\u884c\u5b8c\u6210\u4e00\u4e2a\u6d4b\u8bd5\u96c6\u540e\u628aans\u6e05\u96f6 }while(!(n==0 && d==0)); return 0; }","title":"\u7b97\u6cd5\u8bfe\u8bbe"},{"location":"Algorithm/%E7%AE%97%E6%B3%95%E8%AF%BE%E8%AE%BE/#_1","text":"","title":"\u6700\u4f18\u96f7\u8fbe\u95ee\u9898(\u8d2a\u5fc3\u7b97\u6cd5)"},{"location":"Algorithm/%E7%AE%97%E6%B3%95%E8%AF%BE%E8%AE%BE/#1","text":"\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u6837\u4f8b\u8f93\u5165\u8f93\u51fa\uff0c\u4ee5\u53ca\u89e3\u9898\u601d\u8def\u7684\u5206\u6790\u6b65\u9aa4\u5982\u4e0b\uff1a \u200b \u9996\u5148\u5efa\u7acb\u57fa\u672c\u6570\u5b66\u6a21\u578b\uff0c\u7531\u4e8e\u9898\u76ee\u63d0\u793a\u8981\u91c7\u7528\u8d2a\u5fc3\u7b97\u6cd5\u7684\u7b56\u7565\uff0c\u6240\u4ee5\u5728\u8003\u8651\u6700\u4f18\u89e3\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u6240\u6709\u96f7\u8fbe\u7684\u8bbe\u7f6e\u70b9\u4f4d\u90fd\u5e94\u8be5\u5efa\u7acb\u5728 x\u8f74\u7ebf \u4e0a\u9762\uff0c\u901a\u8fc7\u961f\u957f\u7684\u601d\u8def\u7684\u63d0\u793a\uff0c\u5bf9\u53f3\u7aef\u70b9\u8fdb\u884c\u5347\u5e8f\u6392\u5217\uff0c\u80fd\u6210\u529f\u8986\u76d6\u7684\u5c9b\u5c7f\u90e8\u5206\u76f4\u63a5\u5ffd\u7565\uff0c\u91c7\u7528\u8d2a\u5fc3\u7684\u601d\u8def\uff0c\u8fdb\u884c\u53d6\u820d\uff0c\u53d6\u6700\u4f18\u89e3\u7684\u60c5\u51b5\uff0c\u4e8e\u662f x\u8f74\u7ebf\u4e0a\u6c42\u53d6\u5173\u952e\u70b9 \u6210\u4e3a\u8fd9\u9053\u9898\u6211\u4eec\u7ec4\u7684\u5173\u952e\u89e3\u9898\u601d\u8def\u3002 \u200b \u7136\u540e\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e3b\u8981\u88ab\u6211\u4eec\u5206\u4e3a\u4e09\u4e2a\u4e3b\u8981\u7684\u7b97\u6cd5\u5206\u652f\u90e8\u5206\uff0c\u7b2c\u4e00\u6b65\uff0c\u51fa\u73b0y\u5750\u6807\u5927\u4e8ed\u957f\u5ea6\u7684\u70b9\u5c31\u76f4\u63a5\u8fdb\u884c \u53d6\u820d \uff0c\u5e76\u901a\u8fc7flag\u7684\u503c\u6765\u8fdb\u884c\u8f93\u5165\u7ed3\u675f\u540eprintf(\"-1\")\u7684\u5173\u952e\u5224\u65ad\u3002\u7b2c\u4e8c\u6b65\uff0c\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e0d\u6ee1\u8db3\u7b2c\u4e00\u6b65\u7684\u6761\u4ef6\uff0c\u8fd9\u662f\u5bf9\u95ee\u9898\u8fdb\u884c\u518d\u4e00\u6b21\u7684\u5206\u89e3\uff0c\u9996\u5148\u5229\u7528\u4e0b\u9762\u7684\u516c\u5f0f\u6c42\u51fa\u5728x\u8f74\u548cy\u8f74\u7684\u5750\u6807. a[i].l=x[i]-sqrt(d*d-y[i]*y[i]); //\u6c42\u51fa\u5de6\u7aef\u70b9 a[i].r=x[i]+sqrt(d*d-y[i]*y[i]); //\u6c42\u51fa\u53f3\u7aef\u70b9 \u200b \u4e4b\u540e\u5bf9\u53f3\u7aef\u70b9\u8fdb\u884c\u6392\u5e8f\uff0c\u6392\u5e8f\u540e\uff0c\u8fdb\u5165\u5224\u65ad\u90e8\u5206\uff0c\u5206\u4e3a\u4e00\u4e0b\u4e09\u79cd\u60c5\u51b5 1.\u5728i==1\u7684\u65f6\u5019\uff0c\u628a\u53f3\u7aef\u70b9\u7684\u90e8\u5206\u7684\u503c\u7528temp\u53d8\u91cf\u5b58\u8d77\u6765\uff0c\u7136\u540e\u628a\u7b2c\u4e00\u4e2a\u96f7\u8fbe\u7684\u4f4d\u7f6e\u5b9a\u4f4d\u5230\u6700\u53f3\u4fa7\uff0cans++\u3002 2.\u5728\u5224\u65ad\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u7aef\u70b9\u90e8\u5206\u662f\u5426\u5c0f\u4e8e\u4e0a\u4e00\u4e2a\u8282\u70b9\u7684\u53f3\u7aef\u70b9\u90e8\u5206\uff0c\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219\u76f4\u63a5\u68c0\u67e5\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002 3.\u5426\u5219\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u60c5\u51b5\u7684\u65f6\u5019\uff0c\u8fd9\u662f\u4e00\u4e2a\u8282\u70b9\u663e\u7136\u4e0d\u591f\u5305\u62ec\u6240\u6709\u5c9b\u5c7f\uff0c\u4e8e\u662f\u91cd\u65b0\u5728\u6b64\u8282\u70b9\u4e0a\u5bf9\u540e\u9762\u7684temp\u8fdb\u884c\u66f4\u65b0\u3002 \u6267\u884c\u5b8c\u4e4b\u540e\u518d\u6b21\u8fdb\u5165\u5faa\u73af\u5224\u65ad\u95ee\u9898 \u6ce8\u610f\uff1a \u4e0a\u8ff0\u60c5\u51b5\u90fd\u662f\u5efa\u7acb\u5728\u5728\u6ee1\u8db3\u6392\u5e8f\u6761\u4ef6\u4e4b\u540e\u7684\u3002","title":"1.\u7b97\u6cd5\u601d\u8def\u5206\u6790\uff1a"},{"location":"Algorithm/%E7%AE%97%E6%B3%95%E8%AF%BE%E8%AE%BE/#2","text":"\u200b \u7531\u7b2c\u4e00\u90e8\u5206\u7684\u5206\u6790\uff0c\u6211\u4eec\u9996\u5148\u4f7f\u7528MAXN\u5206\u914d\u4e00\u4e2a\u8f83\u5927\u7684\u6570\uff0c\u7ed9\u4e00\u4e2a\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u9632\u6b62\u6ea2\u51fa\u3002\u7136\u540e\u91c7\u7528\u4e00\u7ef4\u6570\u7ec4\u8fdb\u884c\u5b58\u50a8\u6570\u636e\u5185\u5bb9\u3002 \u7136\u540e\u95ee\u9898\u7684\u5173\u952e\u90e8\u5206\u5c31\u662f\u5bf9\u4e8e\u5de6\u53f3\u7aef\u70b9\u7684\u5b58\u50a8\u95ee\u9898\uff0c\u6211\u4eec\u7ecf\u8fc7\u5c0f\u7ec4\u7684\u8ba8\u8bba\u4f7f\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u8fdb\u884c\u5b58\u50a8\uff0c\u4fbf\u5229\u540e\u9762\u7684\u6392\u5e8f\u548c\u904d\u5386 1. x[MAXN] y[MAXN] //\u7528\u6765\u5b58\u50a8\u67d0\u4e00\u7ed3\u70b9\u7684x\uff0cy\u5750\u6807 2. struct node{ double l,r; //\u5b9a\u4e49\u7ed3\u6784\u4f53\u5b58\u50a8\u5de6\u53f3\u7aef\u70b9 }a[MAXN];","title":"2.\u6570\u636e\u7ed3\u6784\u7684\u9009\u62e9\u548c\u8bbe\u8ba1\uff1a"},{"location":"Algorithm/%E7%AE%97%E6%B3%95%E8%AF%BE%E8%AE%BE/#3","text":"#include <iostream> #include <algorithm> #include <cstdio> #include <math.h> #define MAXN 10001 using namespace std; int n,ans=0;//ans\u7528\u6765\u5b58\u50a8\u7ed3\u679c double d,temp,x[MAXN],y[MAXN]; struct node{ double l,r; //\u5b9a\u4e49\u7ed3\u6784\u4f53\u5b58\u50a8\u505a\u53f3\u7aef\u70b9 }a[MAXN]; double cmp(node aa,node bb){ return aa.r<bb.r; //\u6309\u53f3\u7aef\u70b9\u8fdb\u884c\u5347\u5e8f\u6392\u5217 } int main() { int flag = 1; do{ cin>>n>>d; for(int i=1;i<=n;i++){ { cin>>x[i]>>y[i]; if(y[i]>d){ flag=0; //\u4f7f\u7528flag\u6765\u8fdb\u884c\u6807\u5fd7\u662f\u5426\u65e0\u6cd5\u8986\u76d6\u5c9b\u5c7f } a[i].l=x[i]-sqrt(d*d-y[i]*y[i]); //\u6c42\u51fa\u5de6\u7aef\u70b9 a[i].r=x[i]+sqrt(d*d-y[i]*y[i]); //\u6c42\u51fa\u53f3\u7aef\u70b9 } } sort(a+1,a+n+1,cmp); //\u5bf9a1\u5230an\u8fdb\u884c\u6392\u5e8f //\u7531\u4e8e\u5df2\u7ecf\u7ecf\u8fc7\u5347\u5e8f\u6392\u5217\uff0c\u8fd9\u65f6\u53ea\u9700\u8981\u6700\u5c0f\u53f3\u7aef\u70b9\u90e8\u5206\u8fdb\u884c\u5faa\u73af\u68c0\u6d4b\uff0c\u8fdb\u884c\u6dfb\u52a0\u8282\u70b9\u5373\u53ef for(int i = 1;i<=n;i++){ if(!flag){ printf(\"-1\\n\"); //\u65e0\u6cd5\u8986\u76d6\u8f93\u51fa-1 return 0; } else if(i==1){ temp=a[i].r; //\u628a\u7b2c\u4e00\u4e2a\u96f7\u8fbe\u5b9a\u4f4d\u5230\u6700\u53f3\u4fa7 ans++; } else if(temp>a[i].l) //\u5982\u679c\u8986\u76d6\uff0c\u5219\u8fd4\u56de\u5faa\u73af\u5f00\u59cb\u90e8\u5206 continue; else{ temp=a[i].r; // \u5426\u5219\u9632\u6b62\u4e00\u4e2a\u65b0\u7684\u96f7\u8fbe ans++; } } if(n!=0&&d!=0){ cout<<ans<<endl; //\u5f53n\u548cd\u90fd\u4e0d\u7b49\u4e8e\u96f6\u7684\u65f6\u5019\u8f93\u51fa\uff0c\u907f\u514d\u6700\u540e\u4e00\u6b210\uff0c0\u8f93\u51faans } ans=0; //\u6267\u884c\u5b8c\u6210\u4e00\u4e2a\u6d4b\u8bd5\u96c6\u540e\u628aans\u6e05\u96f6 }while(!(n==0 && d==0)); return 0; }","title":"3.\u7b97\u6cd5\u8bbe\u8ba1\u4ee3\u7801"},{"location":"Autooj%20developing/autooj%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98/","text":"autooj\u5f00\u53d1\u95ee\u9898 # docker in docker when docker run in http://localhost:8080 10.16.13.212:8006 # \u7528whoami\u547d\u4ee4\u67e5\u770b\u7528\u6237\u540d username:ubuntu ip:119.45.43.103 passwd:Ltsert@0911# 1.mysql\u7aef\u53e3\u51b2\u7a81\u95ee\u9898 \u89e3\u51b3\u65b9\u6cd5\uff1a\u4f7f\u7528mysql\u90e8\u7f72\u7684\u65f6\u5019\uff0c\u7531\u4e8emysql\u7684\u56fa\u5b9a\u7aef\u53e3\u4e3a3306\uff0c\u6240\u6709\u5982\u679c\u67e5\u770b\u7aef\u53e3\u8fd0\u884c\u60c5\u51b5 netstat -tulpn # \u5982\u679c3306\u7aef\u53e3\u88ab\u5360\u7528\uff0c\u5219\u9700\u8981\u5bf93306\u7aef\u53e3\u8fdb\u884c\u6620\u5c04 ss -tulpn # \u66f4\u73b0\u4ee3\u7684\u7528\u6cd5 du -aux # wrong 3306->3308 3306:3308 # \u5982\u679c\u5411\u4e0a\u9762\ud83d\udc46\u8fd9\u6837\u6267\u884c\u7684\u8bdd\uff0c\u4e00\u822c\u9ed8\u8ba4mysql\u8fd0\u884c\u57283306\u7aef\u53e3\uff0c\u90a3\u8fd8\u8981\u4fee\u6539my.conf\u7684\u7aef\u53e3\uff0c\u6240\u4ee5\u4e00\u822c\u4e0d\u4f1a\u8fd9\u6837\u505a <\u672c\u5730\u7aef\u53e3>:<\u5bb9\u5668/\u8fdc\u7a0b\u670d\u52a1\u7aef\u53e3> \u6b63\u786e\u7684\u662f 3308:3306 3308->3306 \u4f7f\u7528navicat\u76843308\u7aef\u53e3\u8fdb\u884c\u8bbf\u95ee\u4e3b\u673a3306\u7aef\u53e3\u8fd0\u884c\u7684mysql\uff0c\u4ece\u800c\u89e3\u51b3\u7aef\u53e3\u7684\u51b2\u7a81\u95ee\u9898 docker run -d -p <\u5bbf\u4e3b\u673a\u7aef\u53e3>:<\u5bb9\u5668\u7aef\u53e3> --name <\u5bb9\u5668\u540d\u79f0> <\u955c\u50cf\u540d\u79f0>:<\u6807\u7b7e> \u67e5\u770b3306\u4ee5\u53ca\u8fd0\u884c\u5185\u5bb9\u65b9\u6cd5 root@VM-0-11-ubuntu:/home/ubuntu/AutoOJ# netstat -apn | grep 3306 tcp6 0 0 :::3306 :::* LISTEN 1322021/mysqld \u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5728\u8fd9\u91cc\u9700\u8981\u4fee\u6539\u7aef\u53e3 def get_oj_db_connection(): try: connection = pymysql.connect( host='119.45.43.103', port=3308, # \u8fd9\u91cc\u9700\u8981\u4fee\u6539\u7aef\u53e33306\u4e3a3308 user='aust', password='123456', db='autooj' ) return connection except OperationalError as e: print(\"Error: \", e) return None 2.\u9879\u76ee\u8fc1\u79fb\u95ee\u9898 \u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u51e0\u4e2a\u4f4d\u7f6e\u7684\u6587\u4ef6\u95ee\u9898 compose.yml main.js # npm run build \u540e\u7aef\u63a5\u53e3\u90e8\u5206 utils.py \u90e8\u5206\u7684\u6570\u636e\u5e93\u914d\u7f6e\u90e8\u5206","title":"Autooj\u5f00\u53d1\u95ee\u9898"},{"location":"Autooj%20developing/autooj%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98/#autooj","text":"# docker in docker when docker run in http://localhost:8080 10.16.13.212:8006 # \u7528whoami\u547d\u4ee4\u67e5\u770b\u7528\u6237\u540d username:ubuntu ip:119.45.43.103 passwd:Ltsert@0911#","title":"autooj\u5f00\u53d1\u95ee\u9898"},{"location":"Autooj%20developing/autooj%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98/#1mysql","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a\u4f7f\u7528mysql\u90e8\u7f72\u7684\u65f6\u5019\uff0c\u7531\u4e8emysql\u7684\u56fa\u5b9a\u7aef\u53e3\u4e3a3306\uff0c\u6240\u6709\u5982\u679c\u67e5\u770b\u7aef\u53e3\u8fd0\u884c\u60c5\u51b5 netstat -tulpn # \u5982\u679c3306\u7aef\u53e3\u88ab\u5360\u7528\uff0c\u5219\u9700\u8981\u5bf93306\u7aef\u53e3\u8fdb\u884c\u6620\u5c04 ss -tulpn # \u66f4\u73b0\u4ee3\u7684\u7528\u6cd5 du -aux # wrong 3306->3308 3306:3308 # \u5982\u679c\u5411\u4e0a\u9762\ud83d\udc46\u8fd9\u6837\u6267\u884c\u7684\u8bdd\uff0c\u4e00\u822c\u9ed8\u8ba4mysql\u8fd0\u884c\u57283306\u7aef\u53e3\uff0c\u90a3\u8fd8\u8981\u4fee\u6539my.conf\u7684\u7aef\u53e3\uff0c\u6240\u4ee5\u4e00\u822c\u4e0d\u4f1a\u8fd9\u6837\u505a <\u672c\u5730\u7aef\u53e3>:<\u5bb9\u5668/\u8fdc\u7a0b\u670d\u52a1\u7aef\u53e3> \u6b63\u786e\u7684\u662f 3308:3306 3308->3306 \u4f7f\u7528navicat\u76843308\u7aef\u53e3\u8fdb\u884c\u8bbf\u95ee\u4e3b\u673a3306\u7aef\u53e3\u8fd0\u884c\u7684mysql\uff0c\u4ece\u800c\u89e3\u51b3\u7aef\u53e3\u7684\u51b2\u7a81\u95ee\u9898 docker run -d -p <\u5bbf\u4e3b\u673a\u7aef\u53e3>:<\u5bb9\u5668\u7aef\u53e3> --name <\u5bb9\u5668\u540d\u79f0> <\u955c\u50cf\u540d\u79f0>:<\u6807\u7b7e> \u67e5\u770b3306\u4ee5\u53ca\u8fd0\u884c\u5185\u5bb9\u65b9\u6cd5 root@VM-0-11-ubuntu:/home/ubuntu/AutoOJ# netstat -apn | grep 3306 tcp6 0 0 :::3306 :::* LISTEN 1322021/mysqld \u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5728\u8fd9\u91cc\u9700\u8981\u4fee\u6539\u7aef\u53e3 def get_oj_db_connection(): try: connection = pymysql.connect( host='119.45.43.103', port=3308, # \u8fd9\u91cc\u9700\u8981\u4fee\u6539\u7aef\u53e33306\u4e3a3308 user='aust', password='123456', db='autooj' ) return connection except OperationalError as e: print(\"Error: \", e) return None","title":"1.mysql\u7aef\u53e3\u51b2\u7a81\u95ee\u9898"},{"location":"Autooj%20developing/autooj%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98/#2","text":"\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u51e0\u4e2a\u4f4d\u7f6e\u7684\u6587\u4ef6\u95ee\u9898 compose.yml main.js # npm run build \u540e\u7aef\u63a5\u53e3\u90e8\u5206 utils.py \u90e8\u5206\u7684\u6570\u636e\u5e93\u914d\u7f6e\u90e8\u5206","title":"2.\u9879\u76ee\u8fc1\u79fb\u95ee\u9898"},{"location":"Autooj%20developing/docker%E9%83%A8%E7%BD%B2flask%E9%A1%B9%E7%9B%AE/","text":"docker\u90e8\u7f72flask\u9879\u76ee docker images docker ps \u4f7f\u7528Dockerfile\u548cdocker compose\u6765\u8fdb\u884cdocker\u7684\u90e8\u7f72 \u7f16\u5199dockerfile\u4ee5\u53cacompose.yml # \u9879\u76ee\u6846\u67b6 # backend # frontend # compose.yml \u6574\u4f53\u9879\u76ee\u5de5\u7a0b\u6784\u5efa 1.\u72ec\u7acbbuild docker build -t \"container_name\" . 2.\u4f7f\u7528docker compose \u8fdb\u884cbuild docker-compose build \u524d\u7aef\u4f7f\u7528npm\u6216\u8005yarn\u5de5\u5177\u6784\u5efa\u524d\u7aef\u9879\u76ee npm run build # \u6216\u8005\u4f7f\u7528 yarn build # use # before push ,login first # so run > docker login docker login # \u8fd9\u4e00\u6b65\u603b\u662f\u6253\u5f00docker desktop\uff0c\u5176\u4ed6\u7684\u8ba4\u8bc1\u65b9\u6cd5\u6211\u90fd\u6ca1\u6709\u6d4b\u8bd5 # #login sucessed docker push image_name \u90e8\u7f72\u8fdc\u7aef\u670d\u52a1\u5668 docker pull image_name:tag \u6216\u8005\u4f7f\u7528docker-compose pull sudo docker stop $(docker ps -q) #\u5173\u95ed\u6240\u6709\u6b63\u5728\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668 sudo docker-compose pull docker compose up -d # \u8fd0\u884cdocker compose \u5e76\u5728\u540e\u53f0\u8fd0\u884c \u5355\u72ec\u6216\u8005\u7edf\u4e00\u914d\u7f6e\u6570\u636e\u5e93 docker pull mysql \u8fde\u63a5mysql\u6570\u636e\u5e93 run.sql\u8fdb\u884c\u6570\u636e\u5e93\u7684\u6784\u5efa\uff0c\u4f7f\u752810.16.13.212\u8fdb\u884c\u4e0e\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff0c\u6ce8\u610f\u9ed8\u8ba4\u7aef\u53e3\u53f7\u662f:3306 10.16.13.212:3306 # \u53ef\u4ee5\u4f7f\u7528navicat\u5de5\u5177 run.sql docker volume ls docker\u8fd0\u884c\u610f\u5916\u9000\u51fa docker ps -a # \u67e5\u770b\u5305\u62ec\u9000\u51fa\u7684docker container ubuntu@VM-0-11-ubuntu:~$ docker run -it iocion/test:v1.0 bash ubuntu@VM-0-11-ubuntu:~$ docker exec -it iocion/test:v1.0 bash # \u8fdb\u5165\u5bb9\u5668\u5185\u90e8\u8fdb\u884c\u64cd\u4f5c","title":"Docker\u90e8\u7f72flask\u9879\u76ee"},{"location":"Autooj%20developing/docker%E9%83%A8%E7%BD%B2flask%E9%A1%B9%E7%9B%AE/#dockerflask","text":"docker images docker ps","title":"docker\u90e8\u7f72flask\u9879\u76ee"},{"location":"Autooj%20developing/docker%E9%83%A8%E7%BD%B2flask%E9%A1%B9%E7%9B%AE/#dockerfiledocker-composedocker","text":"\u7f16\u5199dockerfile\u4ee5\u53cacompose.yml # \u9879\u76ee\u6846\u67b6 # backend # frontend # compose.yml","title":"\u4f7f\u7528Dockerfile\u548cdocker compose\u6765\u8fdb\u884cdocker\u7684\u90e8\u7f72"},{"location":"Autooj%20developing/docker%E9%83%A8%E7%BD%B2flask%E9%A1%B9%E7%9B%AE/#_1","text":"1.\u72ec\u7acbbuild docker build -t \"container_name\" . 2.\u4f7f\u7528docker compose \u8fdb\u884cbuild docker-compose build \u524d\u7aef\u4f7f\u7528npm\u6216\u8005yarn\u5de5\u5177\u6784\u5efa\u524d\u7aef\u9879\u76ee npm run build # \u6216\u8005\u4f7f\u7528 yarn build # use # before push ,login first # so run > docker login docker login # \u8fd9\u4e00\u6b65\u603b\u662f\u6253\u5f00docker desktop\uff0c\u5176\u4ed6\u7684\u8ba4\u8bc1\u65b9\u6cd5\u6211\u90fd\u6ca1\u6709\u6d4b\u8bd5 # #login sucessed docker push image_name","title":"\u6574\u4f53\u9879\u76ee\u5de5\u7a0b\u6784\u5efa"},{"location":"Autooj%20developing/docker%E9%83%A8%E7%BD%B2flask%E9%A1%B9%E7%9B%AE/#_2","text":"docker pull image_name:tag \u6216\u8005\u4f7f\u7528docker-compose pull sudo docker stop $(docker ps -q) #\u5173\u95ed\u6240\u6709\u6b63\u5728\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668 sudo docker-compose pull docker compose up -d # \u8fd0\u884cdocker compose \u5e76\u5728\u540e\u53f0\u8fd0\u884c","title":"\u90e8\u7f72\u8fdc\u7aef\u670d\u52a1\u5668"},{"location":"Autooj%20developing/docker%E9%83%A8%E7%BD%B2flask%E9%A1%B9%E7%9B%AE/#_3","text":"docker pull mysql \u8fde\u63a5mysql\u6570\u636e\u5e93 run.sql\u8fdb\u884c\u6570\u636e\u5e93\u7684\u6784\u5efa\uff0c\u4f7f\u752810.16.13.212\u8fdb\u884c\u4e0e\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff0c\u6ce8\u610f\u9ed8\u8ba4\u7aef\u53e3\u53f7\u662f:3306 10.16.13.212:3306 # \u53ef\u4ee5\u4f7f\u7528navicat\u5de5\u5177 run.sql docker volume ls","title":"\u5355\u72ec\u6216\u8005\u7edf\u4e00\u914d\u7f6e\u6570\u636e\u5e93"},{"location":"Autooj%20developing/docker%E9%83%A8%E7%BD%B2flask%E9%A1%B9%E7%9B%AE/#docker","text":"docker ps -a # \u67e5\u770b\u5305\u62ec\u9000\u51fa\u7684docker container ubuntu@VM-0-11-ubuntu:~$ docker run -it iocion/test:v1.0 bash ubuntu@VM-0-11-ubuntu:~$ docker exec -it iocion/test:v1.0 bash # \u8fdb\u5165\u5bb9\u5668\u5185\u90e8\u8fdb\u884c\u64cd\u4f5c","title":"docker\u8fd0\u884c\u610f\u5916\u9000\u51fa"},{"location":"Autooj%20developing/vscode%E8%BF%9C%E7%A8%8Bubuntu%E5%BC%80%E5%8F%91/","text":"linux\u4f7f\u7528\u6307\u5357 1.\u67e5\u770b\u7cfb\u7edf\u4fe1\u606f hostname whoami uname whereis python whatis python which python 2.\u63a5\u53d7\u7f51\u7edc\u8d44\u6e90 wget curl 3.\u663e\u793a\u6587\u4ef6\u5185\u5bb9 cat less head tail cmp diff sort find / -name \"file.*\" find . -type f -name \".*\" find . -type f -empty find . -perm /a=x 4.\u5c3d\u53ef\u80fd\u5c11\u4f7f\u7528mv\u547d\u4ee4,\u6539\u7528\u4f7f\u7528cp\u547d\u4ee4 \u6211\u5728\u4f7f\u7528\u547d\u4ee4\u7684\u65f6\u5019\u7531\u4e8e\u4f7f\u7528\u4e86 mv mv pr /project \u4e4b\u540e\uff0c\u63d0\u793a\u6211\u8981\u4f7f\u7528sudo\uff0c\u611f\u89c9\u4e0d\u592a\u5bf9\u52b2\uff0c\u4f7f\u7528\u4e86sudo\u4e4b\u540e cd project \u53d1\u73b0\u6587\u4ef6\u5185\u5bb9\u4e3a\u7a7a \u539f\u6765\u662f\u7531\u4e8e/\u7684\u539f\u56e0\uff0c\u5bfc\u81f4pr\u79fb\u52a8\u5230\u6839\u76ee\u5f55\u4e0b\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6539\u540dproject\u4e86 \u901a\u8fc7\u8fd9\u4e2a\u4e8b\u4ef6\uff0c\u544a\u8bc9\u6211\u5907\u4efd\u7684\u91cd\u8981\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528testdisk\u8fdb\u884c\u56de\u6863\uff0c\u4f46\u662f\u6211\u4e0d\u592a\u4f1a\u7528 \u6240\u4ee5\u79fb\u52a8\u6587\u4ef6\u5e94\u8be5\u4f7f\u7528 cp \u547d\u4ee4","title":"Vscode\u8fdc\u7a0bubuntu\u5f00\u53d1"},{"location":"Autooj%20developing/vscode%E8%BF%9C%E7%A8%8Bubuntu%E5%BC%80%E5%8F%91/#linux","text":"","title":"linux\u4f7f\u7528\u6307\u5357"},{"location":"Autooj%20developing/vscode%E8%BF%9C%E7%A8%8Bubuntu%E5%BC%80%E5%8F%91/#1","text":"hostname whoami uname whereis python whatis python which python","title":"1.\u67e5\u770b\u7cfb\u7edf\u4fe1\u606f"},{"location":"Autooj%20developing/vscode%E8%BF%9C%E7%A8%8Bubuntu%E5%BC%80%E5%8F%91/#2","text":"wget curl","title":"2.\u63a5\u53d7\u7f51\u7edc\u8d44\u6e90"},{"location":"Autooj%20developing/vscode%E8%BF%9C%E7%A8%8Bubuntu%E5%BC%80%E5%8F%91/#3","text":"cat less head tail cmp diff sort find / -name \"file.*\" find . -type f -name \".*\" find . -type f -empty find . -perm /a=x","title":"3.\u663e\u793a\u6587\u4ef6\u5185\u5bb9"},{"location":"Autooj%20developing/vscode%E8%BF%9C%E7%A8%8Bubuntu%E5%BC%80%E5%8F%91/#4mvcp","text":"\u6211\u5728\u4f7f\u7528\u547d\u4ee4\u7684\u65f6\u5019\u7531\u4e8e\u4f7f\u7528\u4e86 mv mv pr /project \u4e4b\u540e\uff0c\u63d0\u793a\u6211\u8981\u4f7f\u7528sudo\uff0c\u611f\u89c9\u4e0d\u592a\u5bf9\u52b2\uff0c\u4f7f\u7528\u4e86sudo\u4e4b\u540e cd project \u53d1\u73b0\u6587\u4ef6\u5185\u5bb9\u4e3a\u7a7a \u539f\u6765\u662f\u7531\u4e8e/\u7684\u539f\u56e0\uff0c\u5bfc\u81f4pr\u79fb\u52a8\u5230\u6839\u76ee\u5f55\u4e0b\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6539\u540dproject\u4e86 \u901a\u8fc7\u8fd9\u4e2a\u4e8b\u4ef6\uff0c\u544a\u8bc9\u6211\u5907\u4efd\u7684\u91cd\u8981\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528testdisk\u8fdb\u884c\u56de\u6863\uff0c\u4f46\u662f\u6211\u4e0d\u592a\u4f1a\u7528 \u6240\u4ee5\u79fb\u52a8\u6587\u4ef6\u5e94\u8be5\u4f7f\u7528 cp \u547d\u4ee4","title":"4.\u5c3d\u53ef\u80fd\u5c11\u4f7f\u7528mv\u547d\u4ee4,\u6539\u7528\u4f7f\u7528cp\u547d\u4ee4"},{"location":"Bug/%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/","text":"\u9488\u5bf9\u6027\u95ee\u9898\u5206\u6790 (\u62d2\u7eddsb\u9519\u8bef\u8fde\u7eed\u72af) 1.Bug description (bug\u63cf\u8ff0) 2.Expected behavior (\u9884\u671f\u884c\u4e3a) 3.error logs (\u9519\u8bef\u65e5\u5fd7) 4.Step to reproduce the issue (\u91cd\u73b0\u95ee\u9898\u7684\u6b65\u9aa4) 5.Technical details (\u6280\u672f\u7ec6\u8282) 6.Additional context (\u9644\u52a0\u4fe1\u606f) eg :","title":"\u95ee\u9898\u5206\u6790"},{"location":"Bug/%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/#sb","text":"1.Bug description (bug\u63cf\u8ff0) 2.Expected behavior (\u9884\u671f\u884c\u4e3a) 3.error logs (\u9519\u8bef\u65e5\u5fd7) 4.Step to reproduce the issue (\u91cd\u73b0\u95ee\u9898\u7684\u6b65\u9aa4) 5.Technical details (\u6280\u672f\u7ec6\u8282) 6.Additional context (\u9644\u52a0\u4fe1\u606f) eg :","title":"\u9488\u5bf9\u6027\u95ee\u9898\u5206\u6790 (\u62d2\u7eddsb\u9519\u8bef\u8fde\u7eed\u72af)"},{"location":"Database/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%80%E5%8F%91/","text":"oceanbase(miniob) source code learning 1.\u7f16\u8bd1\u8fd0\u884c \u5982\u4f55\u7f16\u8bd1 - MiniOB https://oceanbase.github.io/miniob/design/doxy/html/index.html","title":"\u6570\u636e\u5e93\u5f00\u53d1"},{"location":"Database/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%80%E5%8F%91/#oceanbaseminiob-source-code-learning","text":"","title":"oceanbase(miniob) source code learning"},{"location":"Database/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%80%E5%8F%91/#1","text":"\u5982\u4f55\u7f16\u8bd1 - MiniOB https://oceanbase.github.io/miniob/design/doxy/html/index.html","title":"1.\u7f16\u8bd1\u8fd0\u884c"},{"location":"Database/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%80%83%E8%AF%95%E5%86%85%E5%AE%B9/","text":"1.\u79cd\u7c7b\u91cc\u9762\u81ea\u5df1\u9009\u56db\u79cd->\u81ea\u5df1\u91cd\u65b0\u53e5\u5b50\u7136\u540e\u5199\u8868\u8fbe\u5f0f 2.\u8bbe\u8ba1\uff0c\u6b63\u5219\u5316 P178 \u4f8b6.1 3.\u81ea\u5df1\u5199\u51fa\u51fd\u6570\u4f9d\u8d56\uff0c\u6ee1\u8db3\u7b2c\u51e0\u8303\u5f0f\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u5982\u4f55\u6ee1\u8db3\u3002","title":"\u6570\u636e\u5e93\u8003\u8bd5\u5185\u5bb9"},{"location":"Git/Git%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/","text":"Git \u4f7f\u7528\u7b14\u8bb0 1.\u7f51\u7edc\u8fde\u63a5\u95ee\u9898 \u65e0\u6cd5\u8fde\u63a5\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528clash-verge\u7684\u5168\u5c40\u4ee3\u7406 \u590d\u5236bash\u73af\u5883\u53d8\u91cf\u7c7b\u578b:like this ,then excute it in wsl bash export https_proxy=http://127.0.0.1:7897 http_proxy=http://127.0.0.1:7897 all_proxy=socks5://127.0.0.1:7897 # \u4fee\u6539 ~/.bashrc # \u589e\u52a0\u4e0a\u9762\u7684\u8bed\u53e5 # \u4e3b\u8981\u5206\u4e3a global \u548c local \u4e24\u79cd ,\u8fd9\u91cc\u4e2a\u4eba\u5f00\u53d1\u5c31\u9009\u62e9 global \u6bd4\u8f83\u7b80\u5355 git config --global --unset https.proxy git config --global --unset http.proxy 2.diverged(\u5206\u53c9\u95ee\u9898) \u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f\u5df2\u7ecf\u5206\u53c9\uff08diverged\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u5404\u81ea\u6709\u4e86\u72ec\u7acb\u7684\u63d0\u4ea4\u5386\u53f2\u3002Git \u4e0d\u77e5\u9053\u4f60\u5e0c\u671b\u5982\u4f55\u5904\u7406\u8fd9\u79cd\u5206\u6b67\uff1a\u662f\u901a\u8fc7\u5408\u5e76\uff08merge\uff09\u8fd8\u662f\u901a\u8fc7\u53d8\u57fa\uff08rebase\uff09\u6765\u6574\u5408\u8fd9\u4e9b\u66f4\u6539\u3002 \u7531\u4e8egit\u9ed8\u8ba4\u7684merge\u7b56\u7565\uff0c\u6211\u91c7\u7528rebase(\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u662f\u63d0\u4ea4\u5448\u73b0\u7ebf\u6027\u7684)\uff0c\u4e0d\u4f1a\u5bfc\u81f4merge\u7684\u5206\u652f\u770b\u8d77\u6765\u592a\u4e71 git config pull.rebase true # \u4fee\u6539\u9ed8\u8ba4\u6539\u4e3arebase git pull --rebase origin update # \u624b\u52a8\u6307\u5b9arebase # \u51fa\u73b0rebase conflict git rebase --continue # \u624b\u52a8\u89e3\u51b3\u51b2\u7a81 4.\u5206\u652fclone\u95ee\u9898 # \u4e00\u822c\u60c5\u51b5\u4e0b\uff0cclone\u9879\u76ee\u5730\u5740\u540e\uff0c\u53ea\u4f1aclone main \u5206\u652f\u7684\u5185\u5bb9 # \u5982\u4f55clone \u5176\u4ed6\u6307\u5b9a\u5206\u652f\u5462 eg: brach -> myfeature git clone -b myfeature https://github.com/pwxiao/AutoOJ.git 3.Git\u5de5\u4f5c\u6d41 # github workflow git clone ** git checkout -b myfeature # git diff # check what change you did git add . git commit \"filename\" -m \"\u63d0\u4ea4\u4fe1\u606f\" git push origin myfeature git checkout main git pull origin main git checkout myfeature git rebase main # may be had rebase conflict # you should choice what segement you need. git push -f origin myfeature git checkout myfeature # everthing ready! # pull request # main branch user will use squash and merge # update2 **delete branch** **git checkout main** **git branch -D myfeature** git pull origin master **new result** 4.\u5bf9Git\u8fdb\u884c\u4ee3\u7801\u6253\u5305->zip,tar.gz, git archive --format=zip --output=/home/han/OJ/Autooj.zip HEAD # \u5728\u5f53\u524d\u5206\u652f\u7684head\u4f4d\u7f6e\u8fdb\u884c\u4ee3\u7801\u6253\u5305\uff0c\u8fd9\u91cc\u7684\u683c\u5f0f\u662fzip git log main --oneline # \u67e5\u770bmain\u5206\u652f\u7684hash\u503c 5.\u5bf9\u4e8egit\u4fee\u6539\u5f53\u524d\u5206\u652f\uff0c\u5207\u6362\u5206\u652f\u4e0d\u53d8\u7684\u60c5\u51b5 \u95ee\u9898\u63cf\u8ff0\uff1a\u6211\u5728A\u5206\u652f\u4e0a\u9762\u505a\u4e86\u4fee\u6539\uff0c\u7136\u540e\u5207\u6362\u5230B\u5206\u652f\u7684\u65f6\u5019\uff0c\u53d1\u73b0B\u5206\u652f\u4e0a\u4e5f\u5b58\u5728A\u5206\u652f\u4e0a\u9762\u7684\u4fee\u6539 \u95ee\u9898\u539f\u56e0\uff1a\u5982\u679c\u5f53\u524d\u5206\u652f\u6240\u4f5c\u7684\u4fee\u6539\u6ca1\u6709\u63d0\u4ea4\u5c31\u5207\u6362\u5176\u4ed6\u7684\u5206\u652f\u7684\u8bdd\uff0c\u90a3\u4e48\u5206\u652f\u4e0a\u4e5f\u4f1a\u770b\u5230\u76f8\u540c\u7684\u4fee\u6539 1\uff1a\u89e3\u51b3\u65b9\u6cd5\u4e00 git add . git commit -m \"commit_message\" git status # \u68c0\u67e5\u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a\u662f\u4e0d\u662f\u5e72\u51c0\u7684 # \u5982\u4e0b\u56fe\u6240\u793a 2\uff1a\u89e3\u51b3\u65b9\u6cd5\u4e8c # \u5982\u679c\u5728\u5f53\u524d\u7684\u5206\u652f\u5de5\u4f5c\u8fd8\u6ca1\u6709\u505a\u5b8c\uff0c\u4e0d\u80fd\u63d0\u4ea4\uff0c\u4f46\u662f\u53c8\u60f3\u53bb\u5176\u4ed6\u7684\u5206\u652f\uff0c\u8fd9\u65f6\u53ef\u4ee5\u628a\u5f53\u524d\u5206\u652f\u7684\u5de5\u4f5c\u73b0\u573a\u9690\u85cf\u8d77\u6765\u3002\u4f7f\u7528git stash\u9690\u85cf\u5f53\u524d\u7684\u5de5\u4f5c\u73b0\u573a\uff0c\u8fd9\u65f6\u5019\u4f7f\u7528git status\u67e5\u770b\u5de5\u4f5c\u533a\u662f\u5426\u662f\u5e72\u51c0\u7684\uff0c\u5c31\u53ef\u4ee5\u653e\u5fc3\u53bb\u5176\u4ed6\u5206\u652f\u7684\u90e8\u5206\u4e86\u3002\u4f7f\u7528git stash list \u53ef\u4ee5\u67e5\u770b\u9690\u85cf\u7684\u5de5\u4f5c\u73b0\u573a \u6062\u590d\u5de5\u4f5c\u73b0\u573a\u7684\u4e24\u79cd\u65b9\u5f0f 1.\u7528 git stash apply \u6062\u590d\u3002\u6062\u590d\u540e\uff0cstash list \u4e2d\u5e76\u4e0d\u5220\u9664\u6062\u590d\u7684stash\uff0c\u9700\u8981\u4f7f\u7528 git stash drop \u6765\u5220\u9664\u3002 2.\u7528 git stash pop,\u6062\u590d\u7684\u65f6\u5019\uff0c\u5148\u7528 git stash list \u67e5\u770b\uff0c\u7136\u540e\u4f7f\u7528 git stash apply stash@{0} or git stash pop stash@{0} \u6765\u6062\u590d\u6307\u5b9a\u7684 stash","title":"Git \u4f7f\u7528\u7b14\u8bb0"},{"location":"Git/Git%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#git","text":"","title":"Git \u4f7f\u7528\u7b14\u8bb0"},{"location":"Git/Git%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#1","text":"\u65e0\u6cd5\u8fde\u63a5\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528clash-verge\u7684\u5168\u5c40\u4ee3\u7406 \u590d\u5236bash\u73af\u5883\u53d8\u91cf\u7c7b\u578b:like this ,then excute it in wsl bash export https_proxy=http://127.0.0.1:7897 http_proxy=http://127.0.0.1:7897 all_proxy=socks5://127.0.0.1:7897 # \u4fee\u6539 ~/.bashrc # \u589e\u52a0\u4e0a\u9762\u7684\u8bed\u53e5 # \u4e3b\u8981\u5206\u4e3a global \u548c local \u4e24\u79cd ,\u8fd9\u91cc\u4e2a\u4eba\u5f00\u53d1\u5c31\u9009\u62e9 global \u6bd4\u8f83\u7b80\u5355 git config --global --unset https.proxy git config --global --unset http.proxy","title":"1.\u7f51\u7edc\u8fde\u63a5\u95ee\u9898"},{"location":"Git/Git%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#2diverged","text":"\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f\u5df2\u7ecf\u5206\u53c9\uff08diverged\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u5404\u81ea\u6709\u4e86\u72ec\u7acb\u7684\u63d0\u4ea4\u5386\u53f2\u3002Git \u4e0d\u77e5\u9053\u4f60\u5e0c\u671b\u5982\u4f55\u5904\u7406\u8fd9\u79cd\u5206\u6b67\uff1a\u662f\u901a\u8fc7\u5408\u5e76\uff08merge\uff09\u8fd8\u662f\u901a\u8fc7\u53d8\u57fa\uff08rebase\uff09\u6765\u6574\u5408\u8fd9\u4e9b\u66f4\u6539\u3002 \u7531\u4e8egit\u9ed8\u8ba4\u7684merge\u7b56\u7565\uff0c\u6211\u91c7\u7528rebase(\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u662f\u63d0\u4ea4\u5448\u73b0\u7ebf\u6027\u7684)\uff0c\u4e0d\u4f1a\u5bfc\u81f4merge\u7684\u5206\u652f\u770b\u8d77\u6765\u592a\u4e71 git config pull.rebase true # \u4fee\u6539\u9ed8\u8ba4\u6539\u4e3arebase git pull --rebase origin update # \u624b\u52a8\u6307\u5b9arebase # \u51fa\u73b0rebase conflict git rebase --continue # \u624b\u52a8\u89e3\u51b3\u51b2\u7a81","title":"2.diverged(\u5206\u53c9\u95ee\u9898)"},{"location":"Git/Git%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#4clone","text":"# \u4e00\u822c\u60c5\u51b5\u4e0b\uff0cclone\u9879\u76ee\u5730\u5740\u540e\uff0c\u53ea\u4f1aclone main \u5206\u652f\u7684\u5185\u5bb9 # \u5982\u4f55clone \u5176\u4ed6\u6307\u5b9a\u5206\u652f\u5462 eg: brach -> myfeature git clone -b myfeature https://github.com/pwxiao/AutoOJ.git","title":"4.\u5206\u652fclone\u95ee\u9898"},{"location":"Git/Git%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#3git","text":"# github workflow git clone ** git checkout -b myfeature # git diff # check what change you did git add . git commit \"filename\" -m \"\u63d0\u4ea4\u4fe1\u606f\" git push origin myfeature git checkout main git pull origin main git checkout myfeature git rebase main # may be had rebase conflict # you should choice what segement you need. git push -f origin myfeature git checkout myfeature # everthing ready! # pull request # main branch user will use squash and merge # update2 **delete branch** **git checkout main** **git branch -D myfeature** git pull origin master **new result**","title":"3.Git\u5de5\u4f5c\u6d41"},{"location":"Git/Git%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#4git-ziptargz","text":"git archive --format=zip --output=/home/han/OJ/Autooj.zip HEAD # \u5728\u5f53\u524d\u5206\u652f\u7684head\u4f4d\u7f6e\u8fdb\u884c\u4ee3\u7801\u6253\u5305\uff0c\u8fd9\u91cc\u7684\u683c\u5f0f\u662fzip git log main --oneline # \u67e5\u770bmain\u5206\u652f\u7684hash\u503c","title":"4.\u5bf9Git\u8fdb\u884c\u4ee3\u7801\u6253\u5305-&gt;zip,tar.gz,"},{"location":"Git/Git%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/#5git","text":"\u95ee\u9898\u63cf\u8ff0\uff1a\u6211\u5728A\u5206\u652f\u4e0a\u9762\u505a\u4e86\u4fee\u6539\uff0c\u7136\u540e\u5207\u6362\u5230B\u5206\u652f\u7684\u65f6\u5019\uff0c\u53d1\u73b0B\u5206\u652f\u4e0a\u4e5f\u5b58\u5728A\u5206\u652f\u4e0a\u9762\u7684\u4fee\u6539 \u95ee\u9898\u539f\u56e0\uff1a\u5982\u679c\u5f53\u524d\u5206\u652f\u6240\u4f5c\u7684\u4fee\u6539\u6ca1\u6709\u63d0\u4ea4\u5c31\u5207\u6362\u5176\u4ed6\u7684\u5206\u652f\u7684\u8bdd\uff0c\u90a3\u4e48\u5206\u652f\u4e0a\u4e5f\u4f1a\u770b\u5230\u76f8\u540c\u7684\u4fee\u6539 1\uff1a\u89e3\u51b3\u65b9\u6cd5\u4e00 git add . git commit -m \"commit_message\" git status # \u68c0\u67e5\u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a\u662f\u4e0d\u662f\u5e72\u51c0\u7684 # \u5982\u4e0b\u56fe\u6240\u793a 2\uff1a\u89e3\u51b3\u65b9\u6cd5\u4e8c # \u5982\u679c\u5728\u5f53\u524d\u7684\u5206\u652f\u5de5\u4f5c\u8fd8\u6ca1\u6709\u505a\u5b8c\uff0c\u4e0d\u80fd\u63d0\u4ea4\uff0c\u4f46\u662f\u53c8\u60f3\u53bb\u5176\u4ed6\u7684\u5206\u652f\uff0c\u8fd9\u65f6\u53ef\u4ee5\u628a\u5f53\u524d\u5206\u652f\u7684\u5de5\u4f5c\u73b0\u573a\u9690\u85cf\u8d77\u6765\u3002\u4f7f\u7528git stash\u9690\u85cf\u5f53\u524d\u7684\u5de5\u4f5c\u73b0\u573a\uff0c\u8fd9\u65f6\u5019\u4f7f\u7528git status\u67e5\u770b\u5de5\u4f5c\u533a\u662f\u5426\u662f\u5e72\u51c0\u7684\uff0c\u5c31\u53ef\u4ee5\u653e\u5fc3\u53bb\u5176\u4ed6\u5206\u652f\u7684\u90e8\u5206\u4e86\u3002\u4f7f\u7528git stash list \u53ef\u4ee5\u67e5\u770b\u9690\u85cf\u7684\u5de5\u4f5c\u73b0\u573a \u6062\u590d\u5de5\u4f5c\u73b0\u573a\u7684\u4e24\u79cd\u65b9\u5f0f 1.\u7528 git stash apply \u6062\u590d\u3002\u6062\u590d\u540e\uff0cstash list \u4e2d\u5e76\u4e0d\u5220\u9664\u6062\u590d\u7684stash\uff0c\u9700\u8981\u4f7f\u7528 git stash drop \u6765\u5220\u9664\u3002 2.\u7528 git stash pop,\u6062\u590d\u7684\u65f6\u5019\uff0c\u5148\u7528 git stash list \u67e5\u770b\uff0c\u7136\u540e\u4f7f\u7528 git stash apply stash@{0} or git stash pop stash@{0} \u6765\u6062\u590d\u6307\u5b9a\u7684 stash","title":"5.\u5bf9\u4e8egit\u4fee\u6539\u5f53\u524d\u5206\u652f\uff0c\u5207\u6362\u5206\u652f\u4e0d\u53d8\u7684\u60c5\u51b5"},{"location":"Other/Untitled/","text":"\u4f7f\u7528nmap\u5bf9ssh\u5bc6\u7801\u8fdb\u884c\u7834\u89e3 228 2025-04-30 22:20:53 nmap -A -v -T4 114.55.147.180 229 2025-04-30 22:26:17 cd 230 2025-04-30 22:26:18 ls 231 2025-04-30 22:27:00 crunch 6 6 123456 -o ~/passwd.txt 232 2025-04-30 22:27:12 cat passwd.txt 233 2025-04-30 22:27:20 clear 234 2025-04-30 22:28:10 ls 235 2025-04-30 22:28:21 vim user.txt 236 2025-04-30 22:28:28 ls 237 2025-04-30 22:29:10 hydra -L ~/user.txt -P ~/passwd.txt -vV -o ssh.log -e ns 114.55.147.180 ssh","title":"Untitled"},{"location":"Other/sql_injection/","text":"sql injection(sql\u6ce8\u5165) \u539f\u7406\uff1a\u7cfb\u7edf\u539f\u672c\u8981\u8fdb\u884c\u7684\u4efb\u52a1\uff0c\u7531\u4e8e\u66f4\u6539sql\u8bed\u53e5\u7684\u4fe1\u606f\u800c\u66f4\u6539\u5185\u5bb9\uff0c\u8ba9\u539f\u672c\u8fdb\u884c\u7684\u4efb\u52a1\u8f6c\u79fb https://test-ipv6.com/ # \u6d4b\u8bd5\u7f51\u7edc\u662f\u5426\u5141\u8bb8ipv6\u7684\u7f51\u7ad9 https://test-ipv4.com/ # For linux you can use some tools # 1.sqlmap -> sqlmapapi # Use this tool try to use url to inject some SQL language words","title":"sql injection(sql\u6ce8\u5165)"},{"location":"Other/sql_injection/#sql-injectionsql","text":"\u539f\u7406\uff1a\u7cfb\u7edf\u539f\u672c\u8981\u8fdb\u884c\u7684\u4efb\u52a1\uff0c\u7531\u4e8e\u66f4\u6539sql\u8bed\u53e5\u7684\u4fe1\u606f\u800c\u66f4\u6539\u5185\u5bb9\uff0c\u8ba9\u539f\u672c\u8fdb\u884c\u7684\u4efb\u52a1\u8f6c\u79fb https://test-ipv6.com/ # \u6d4b\u8bd5\u7f51\u7edc\u662f\u5426\u5141\u8bb8ipv6\u7684\u7f51\u7ad9 https://test-ipv4.com/ # For linux you can use some tools # 1.sqlmap -> sqlmapapi # Use this tool try to use url to inject some SQL language words","title":"sql injection(sql\u6ce8\u5165)"},{"location":"Other/%E5%BC%80%E5%8F%91/","text":"web\u5f00\u53d1 just use linux wsl debian red-hat # ubuntu \u754c\u9762\u7b80\u5355\uff0c\u5305\u7ba1\u7406\u591a\uff0c\u5e94\u7528\u65b9\u4fbf\uff0c\u793e\u533a\u5f3a\u5927 # kali-linux \u7528\u4e8e\u7f51\u7edc\u5b89\u5168\u504f\u591a # NOI-linux \u4e13\u4e3aoier\u8bbe\u8ba1 just use vim server side # ubuntu \u6211\u7684\u4e3b\u8981\u5f00\u53d1\u73af\u5883\u662fwsl\u4f5c\u4e3a\u4e3b\u529b\u673a+vscode\u7f16\u5199\u4ee3\u7801 server\u7aef\u53e3\u8fdb\u884c\u7aef\u53e3\u8f6c\u53d1(\u90e8\u7f72) # \u73af\u5883 learn framework \u57fa\u4e8epython\u7b80\u5355\uff0c\u793e\u533a\u53d1\u8fbe\u7684\u7279\u6027 youtube use python to develop flask\u6846\u67b6\uff1ahttps://flask.palletsprojects.com/en/stable/quickstart/#a-minimal-application django\u6846\u67b6:https://www.djangoproject.com/ flask\u6846\u67b6 -> \u5f00\u53d1\u7b80\u5355\u5e94\u7528 django\u6846\u67b6 -> \u5f00\u53d1\u4f01\u4e1a\u7ea7\u5e94\u7528 Docker vs VM https://info.support.huawei.com/info-finder/encyclopedia/zh/Docker%E5%AE%B9%E5%99%A8.html \u90e8\u7f72\u4e00\u4e2aweb\u5e94\u7528\u9700\u8981\u4ec0\u4e48? just use docker instead of vm","title":"\u5f00\u53d1"},{"location":"Other/%E5%BC%80%E5%8F%91/#web","text":"","title":"web\u5f00\u53d1"},{"location":"Other/%E5%BC%80%E5%8F%91/#just-use-linux","text":"wsl debian red-hat # ubuntu \u754c\u9762\u7b80\u5355\uff0c\u5305\u7ba1\u7406\u591a\uff0c\u5e94\u7528\u65b9\u4fbf\uff0c\u793e\u533a\u5f3a\u5927 # kali-linux \u7528\u4e8e\u7f51\u7edc\u5b89\u5168\u504f\u591a # NOI-linux \u4e13\u4e3aoier\u8bbe\u8ba1 just use vim server side # ubuntu \u6211\u7684\u4e3b\u8981\u5f00\u53d1\u73af\u5883\u662fwsl\u4f5c\u4e3a\u4e3b\u529b\u673a+vscode\u7f16\u5199\u4ee3\u7801 server\u7aef\u53e3\u8fdb\u884c\u7aef\u53e3\u8f6c\u53d1(\u90e8\u7f72) # \u73af\u5883","title":"just use linux"},{"location":"Other/%E5%BC%80%E5%8F%91/#learn-framework","text":"\u57fa\u4e8epython\u7b80\u5355\uff0c\u793e\u533a\u53d1\u8fbe\u7684\u7279\u6027 youtube use python to develop flask\u6846\u67b6\uff1ahttps://flask.palletsprojects.com/en/stable/quickstart/#a-minimal-application django\u6846\u67b6:https://www.djangoproject.com/ flask\u6846\u67b6 -> \u5f00\u53d1\u7b80\u5355\u5e94\u7528 django\u6846\u67b6 -> \u5f00\u53d1\u4f01\u4e1a\u7ea7\u5e94\u7528","title":"learn framework"},{"location":"Other/%E5%BC%80%E5%8F%91/#docker-vs-vm","text":"https://info.support.huawei.com/info-finder/encyclopedia/zh/Docker%E5%AE%B9%E5%99%A8.html \u90e8\u7f72\u4e00\u4e2aweb\u5e94\u7528\u9700\u8981\u4ec0\u4e48? just use docker instead of vm","title":"Docker vs VM"},{"location":"Record/2024.4.28%E6%9D%AD%E5%B7%9E%E8%AE%B0%E5%BD%95/","text":"2024.4.28\u676d\u5dde\u8bb0\u5f55 \u200b \u5728\u79d1\u5927\u8baf\u98deAI\u5f00\u53d1\u8005\u5927\u4f1a\u7684\u4e00\u5929\uff0c\u770b\u5230\u4e86\u5f88\u591a\u7684\u4f01\u4e1a\uff0c\u8ba9\u6211\u5f71\u54cd\u6700\u6df1\u7684\u8fd8\u662f\u676d\u5dde\u4e91\u6df1\u5904\u516c\u53f8\uff0c\u4ed6\u7684\u4ea7\u54c1\u4f9b\u5e94\u94fe\u505a\u7684\u662f\u505a\u597d\u7684\uff0c\u4ece\u6280\u672f\u4ea7\u54c1\u7684\u5f00\u53d1\u4ee5\u53ca\u8425\u9500\u5230\u5b9e\u9645\u573a\u666f\u4e0b\u7684\u5f00\u53d1\u73af\u5883\uff0c\u518d\u5230\u521b\u4e1a\u7684\u57fa\u672c\u73b0\u72b6 \u200b \u8ba9\u6211\u6700\u6df1\u523b\u7684\u611f\u53d7\u5c31\u662f\uff0c\u9996\u5148\u521b\u4e1a\u662f\u5fc5\u987b\u8981\u6709\u6fc0\u60c5\u7684\uff0c\u7136\u540e\u6280\u672f\u529b\u662f\u7b2c\u4e00\uff0c\u6ca1\u6709\u8db3\u591f\u7684\u77e5\u8bc6\u79ef\u7d2f\u4ee5\u53ca\u6838\u5fc3\u6280\u672f\u652f\u6301\uff0c\u4e00\u4e2a\u521d\u521b\u516c\u53f8\u5f88\u96be\u5728\u4e00\u4e2a\u884c\u4e1a\u7684\u8d77\u6b65\u9636\u6bb5\u505a\u4e0b\u53bb\uff0c\u6709\u4e86\u6280\u672f\u529b\u4e4b\u540e\u7136\u540e\u5c31\u662f\u5e02\u573a,\uff08\u505a\u6240\u8c13\u7684\u79d1\u6280\u4ea7\u54c1\u8fd8\u662f\u8981\u628a\u7528\u6237\u4f5c\u4e3a\u9996\u4f4d\u7684\uff0c\u4ea7\u54c1\u662f\u5426\u662f\u521a\u9700\uff0c\u6211\u89c9\u5f97\u5728\u73b0\u9636\u6bb5\u4e0d\u662f\u90a3\u4e48\u7684\u91cd\u8981\uff09 \u200b \u804a\u5230\u5b87\u6811\u79d1\u6280\uff0c\u9996\u5148\u5982\u4eca\u7684\u5b87\u6811\u79d1\u6280\u7684\u4ea7\u54c1\u59cb\u7ec8\u8fd8\u662f\u4e00\u4e2a\u6781\u5ba2\u7684\u5c0f\u73a9\u5177\uff0c\u867d\u7136\u5728\u673a\u5668\u4eba\u7684\u52a8\u4f5c\u6a21\u7ec4\u9002\u5e94\u4ee5\u53ca\u5e94\u7528\u7b97\u6cd5\u4e0a\uff0c\u6216\u8005\u8bf4\u662f\u786c\u4ef6\u81ea\u7814\u4e0a\u9762\u90fd\u6709\u4e0d\u5c0f\u7684\u8fdb\u6b65\uff0c\u4f46\u662f\u76ee\u524d\u8fd8\u662f\u4e0d\u80fd\u5b8c\u5168\u8131\u79bb\u624b\u52a8\u63a7\u5236\uff0c\u4ecd\u7136\u53ea\u662f\u4e00\u4e2a\u624b\u52a8\u64cd\u4f5c\u7684\u73a9\u5177\uff0c\u73b0\u5728\u7684\u673a\u5668\u5b66\u4e60\u786e\u5b9e\u4f7f\u673a\u5668\u4eba\u7684\u62df\u5408\u4ee5\u53ca\u6a21\u62df\u8bad\u7ec3\u6709\u4e86\u4e0d\u5c0f\u7684\u63d0\u9ad8\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u6838\u5fc3\u53d1\u5c55\u5c42\u9762\u6ca1\u6709\u53d8\uff0c\u4ecd\u7136\u8fd8\u662f\u4e00\u4e2a\u6781\u5177\u53d1\u5c55\u524d\u666f\u7684\u9879\u76ee\u3002(\u6216\u8005\u8bf4\u5168\u4e16\u754c\u76ee\u524d\u90fd\u65e0\u6cd5\u505a\u5230\uff0c\u4f7f\u7528AI\u81ea\u9002\u5e94\u5b8c\u5168\u63a7\u5236\u7684\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u7cbe\u7ec6\u64cd\u4f5c\u5c42\u9762\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6311\u6218) \u6bd4\u8d5b\u7ed3\u675f\u4e4b\u540e\u8bc4\u59d4\u603b\u7ed3\u7684\u5f88\u597d\u5c31\u662f\uff1a\u6280\u672f->\u5e02\u573a->\u7ba1\u7406 \u200b \u7136\u540e\u6211\u5728\u6bd4\u8d5b\u7ed3\u675f\u7684\u65f6\u5019\u624d\u5bf9\u4e86\u4e03\u53ea\u961f\u4f0d\u7684\u524d\u4e09\u540d\u6392\u540d\u4fe1\u606f\uff0c\u548c\u6211\u731c\u6d4b\u7684\u5b8c\u5168\u4e00\u81f4\uff0c\u6216\u8bb8\u6211\u4e5f\u6709\u4e00\u4e9b\u81ea\u5df1\u7684\u6f5c\u529b\u5728\u91cc\u9762\u5462(\u54c8\u54c8\u54c8\u54c8\u54c8\uff0c\u548c2023\u5e74\u7684\u4e16\u754c\u676f\u4e00\u6837\u6211\u4e5f\u662f\u5b8c\u7f8e\u7684\u731c\u4e2d\u4e86\u524d\u4e09\u540d\u7684\u540d\u6b21\uff0c\u5206\u522b\u662f\u963f\u6839\u5ef7\uff0c\u6cd5\u56fd\u4ee5\u53ca\u514b\u7f57\u5730\u4e9a) \u200b \u6700\u540e\u804a\u4e00\u804a\u8fd9\u4e00\u6b21\u7684\u4f53\u9a8c\uff0c\u6765\u5230\u676d\u5dde\u5df2\u7ecf\u4e0d\u662f\u7b2c\u4e00\u6b21\u4e86\uff0c\u4f46\u662f\u8fd9\u4e00\u6b21\u771f\u6b63\u5230\u4e86\u676d\u5dde\u7684\u516c\u53f8\uff0c\u4e5f\u770b\u5230\u4e86\u4e0d\u9519\u7684\u5de5\u4f5c\u73af\u5883\uff0c\u8bf4\u8d77\u521b\u4e1a\uff0c\u6211\u89c9\u5f97\u5728\u73b0\u4eca\u4ecd\u7136\u662f\u4e00\u4e2a\u6709\u524d\u9014\u7684\u65b9\u5411\uff0c\u4f46\u662f\u6280\u672f\u529b\u6216\u8005\u662f\u4eba\u8109\u4ee5\u53ca\u5bf9\u8fd9\u4e2a\u793e\u4f1a\u7684\u5e94\u5bf9\u65b9\u5f0f\u4e5f\u662f\u5904\u7406\u548c\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u6839\u672c\u95ee\u9898\u6240\u5728\u3002 \u200b \u8fd8\u6709\u4e00\u4e2a\u6765\u5230\u8fd9\u91cc\u7684\u5c0f\u8da3\u4e8b\uff0c\u6211\u4eec\u8ddf\u7740\u4e00\u5806\u62bd\u70df\u7684\u4eba\u8fdb\u5165\u4e86\u79d1\u5927\u8baf\u98de\u7684-2\u697c\uff0c\u8bef\u8ba4\u4e3a\u4ed6\u4eec\u662f\u6765\u53c2\u52a0\u6bd4\u8d5b\u7684\u9009\u624b\uff0c\u5b9e\u9645\u4e0a\u53d1\u73b0\u5230\u573a\u6765\u8fdb\u884c\u53c2\u89c2\u4f01\u4e1a\u6bd4\u8d5b\u7684\u53ea\u6709\u8ddf\u6211\u540c\u884c\u7684\u4eba\u662f\u672c\u79d1\u751f\uff0c\u5176\u4ed6\u7684\u90fd\u662f\u4f01\u4e1a\u6216\u8005\u516c\u53f8\u7684\u4eba\uff0c\u6211\u89c9\u5f97\u4eba\u4e0e\u4eba\u7684\u5dee\u5f02\u6216\u8005\u8bf4\u751f\u6d3b\u662f\u5b8c\u5168\u4e0d\u540c\u7684\uff0c\u5b66\u4e60\u53bb\u6dd8\u6c70\u4e00\u6279\u4eba\uff0c\u5728\u73b0\u5728\u6211\u770b\u6765\u6211\u89c9\u5f97\u662f\u5408\u7406\u7684\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u8def\u7ebf\u548c\u76ee\u6807\u4ee5\u53ca\u4e16\u754c\u89c2\u6216\u8bb8\u548c\u6211\u4eec\u4e0d\u662f\u4e00\u4e2a\u4e16\u754c< _ >\u7684\u5462 \u4e16\u754c\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u8349\u53f0\u73ed\u5b50 \u6211\u8fd8\u53d1\u73b070\u540e\u7684\u8001\u603b\u539f\u6765\uff0c\u521b\u7acb\u516c\u53f8\u516d\u4e03\u5e74\u8fd8\u662f\u5728\u6f14\u8bb2\u7684\u65f6\u5019\u4f1a\u7d27\u5f20\u53e3\u5403\u54c8\u54c8\u54c8\u54c8 \u51fa\u95e8\u5728\u5916\u9762\u5b50\u662f\u81ea\u5df1\u7ed9\u7684","title":"2024.4.28\u676d\u5dde\u8bb0\u5f55"}]}